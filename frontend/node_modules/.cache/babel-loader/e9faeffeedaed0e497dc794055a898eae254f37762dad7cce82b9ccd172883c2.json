{"ast":null,"code":"var _jsxFileName = \"/Users/gayatrinimbolkar/Public/Projects/Todo_app/frontend/src/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Create from './Create';\nimport './App.css';\nimport axios from 'axios';\nimport { BsCircleFill, BsFillCheckCircleFill, BsFillTrashFill, BsPencilFill } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [updatetask, setUpdatetask] = useState('');\n  const [taskid, setTaskid] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:5003/get').then(result => setTodos(result.data)).catch(err => console.log(err));\n  }, []);\n  const toggleTask = (id, done) => {\n    const confirmationMessage = done ? \"Do you want to mark this task as not done?\" : \"Are you sure you're done with this task?\";\n    if (window.confirm(confirmationMessage)) {\n      axios.put(`http://localhost:5003/edit/${id}`).then(result => {\n        console.log(result.data);\n        const updatedTodos = todos.map(todo => {\n          if (todo._id === id) {\n            return {\n              ...todo,\n              done: !todo.done\n            };\n          }\n          return todo;\n        });\n        setTodos(updatedTodos);\n      }).catch(err => console.log(err));\n    }\n  };\n  const Update = (id, updatedTask) => {\n    axios.put(`http://localhost:5003/update/${id}`, {\n      task: updatedTask\n    }).then(result => {\n      console.log(result.data);\n      const updatedTodos = todos.map(todo => {\n        if (todo._id === id) {\n          return {\n            ...todo,\n            task: updatedTask\n          };\n        }\n        return todo;\n      });\n      setTodos(updatedTodos);\n      setTaskid('');\n      setUpdatetask('');\n      window.location.reload();\n    }).catch(err => console.log(err));\n  };\n  const Hdelete = id => {\n    axios.delete(`http://localhost:5003/delete/${id}`).then(result => {\n      console.log(result.data);\n      const updatedTodos = todos.filter(todo => todo._id !== id);\n      setTodos(updatedTodos);\n    }).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: todoIcon,\n        alt: \"ToDo Icon\",\n        style: {\n          width: '32px',\n          height: '32px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), \"ToDo List\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Create, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), todos.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: \"No tasks found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 38\n    }, this) : todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox\",\n        children: [todo.done ? /*#__PURE__*/_jsxDEV(BsFillCheckCircleFill, {\n          className: \"icon\",\n          onClick: () => toggleTask(todo._id, todo.done)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(BsCircleFill, {\n          className: \"icon\",\n          onClick: () => toggleTask(todo._id, todo.done)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }, this), taskid === todo._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: updatetask,\n          onChange: e => setUpdatetask(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: todo.done ? 'through' : 'normal',\n          children: todo.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-container\",\n        children: [/*#__PURE__*/_jsxDEV(BsPencilFill, {\n          className: \"icon\",\n          onClick: () => {\n            if (taskid === todo._id) {\n              Update(todo._id, updatetask);\n            } else {\n              setTaskid(todo._id);\n              setUpdatetask(todo.task);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(BsFillTrashFill, {\n          className: \"icon\",\n          onClick: () => Hdelete(todo._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }, this)]\n    }, todo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"qeEKvNRMbDOiBj/Ch57E47lVe/4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Create","axios","BsCircleFill","BsFillCheckCircleFill","BsFillTrashFill","BsPencilFill","jsxDEV","_jsxDEV","Home","_s","todos","setTodos","updatetask","setUpdatetask","taskid","setTaskid","get","then","result","data","catch","err","console","log","toggleTask","id","done","confirmationMessage","window","confirm","put","updatedTodos","map","todo","_id","Update","updatedTask","task","location","reload","Hdelete","delete","filter","children","style","display","alignItems","gap","src","todoIcon","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","length","className","onClick","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/gayatrinimbolkar/Public/Projects/Todo_app/frontend/src/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Create from './Create';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport { \r\n    BsCircleFill, \r\n    BsFillCheckCircleFill, \r\n    BsFillTrashFill, \r\n    BsPencilFill\r\n} from 'react-icons/bs';\r\n\r\n\r\nconst Home = () => {\r\n    const [todos, setTodos] = useState([]);\r\n    const [updatetask, setUpdatetask] = useState('');\r\n    const [taskid, setTaskid] = useState('');\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5003/get')\r\n            .then(result => setTodos(result.data))\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    const toggleTask = (id, done) => {\r\n        const confirmationMessage = done\r\n            ? \"Do you want to mark this task as not done?\"\r\n            : \"Are you sure you're done with this task?\";\r\n        \r\n        if (window.confirm(confirmationMessage)) {\r\n            axios.put(`http://localhost:5003/edit/${id}`)\r\n                .then(result => {\r\n                    console.log(result.data);\r\n                    const updatedTodos = todos.map(todo => {\r\n                        if (todo._id === id) {\r\n                            return { ...todo, done: !todo.done };\r\n                        }\r\n                        return todo;\r\n                    });\r\n                    setTodos(updatedTodos);\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    };\r\n\r\n    const Update = (id, updatedTask) => {\r\n        axios.put(`http://localhost:5003/update/${id}`, { task: updatedTask })\r\n            .then(result => {\r\n                console.log(result.data);\r\n                const updatedTodos = todos.map(todo => {\r\n                    if (todo._id === id) {\r\n                        return { ...todo, task: updatedTask };\r\n                    }\r\n                    return todo;\r\n                });\r\n                setTodos(updatedTodos);\r\n                setTaskid('');\r\n                setUpdatetask('');\r\n                window.location.reload(); \r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    const Hdelete = (id) => {\r\n        axios.delete(`http://localhost:5003/delete/${id}`)\r\n            .then(result => {\r\n                console.log(result.data);\r\n                const updatedTodos = todos.filter(todo => todo._id !== id);\r\n                setTodos(updatedTodos);\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    return (\r\n        <main>\r\n            <h1 style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n                <img src={todoIcon} alt=\"ToDo Icon\" style={{ width: '32px', height: '32px' }} />\r\n                ToDo List\r\n            </h1>\r\n\r\n            <Create />\r\n\r\n            {\r\n                todos.length === 0 ? <div className='task'>No tasks found</div> :\r\n                    todos.map((todo) => (\r\n                        <div className='task' key={todo._id}>\r\n                            <div className='checkbox'>\r\n                                {todo.done ? \r\n                                    <BsFillCheckCircleFill \r\n                                        className='icon' \r\n                                        onClick={() => toggleTask(todo._id, todo.done)} \r\n                                    /> :\r\n                                    <BsCircleFill \r\n                                        className='icon' \r\n                                        onClick={() => toggleTask(todo._id, todo.done)} \r\n                                    />\r\n                                }\r\n                                {taskid === todo._id ? (\r\n                                    <input \r\n                                        type='text' \r\n                                        value={updatetask} \r\n                                        onChange={e => setUpdatetask(e.target.value)} \r\n                                    />\r\n                                ) : (\r\n                                    <p className={todo.done ? 'through' : 'normal'}>\r\n                                        {todo.task}\r\n                                    </p>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"icon-container\">\r\n                                <BsPencilFill \r\n                                    className='icon' \r\n                                    onClick={() => {\r\n                                        if (taskid === todo._id) {\r\n                                            Update(todo._id, updatetask);\r\n                                        } else {\r\n                                            setTaskid(todo._id);\r\n                                            setUpdatetask(todo.task);\r\n                                        }\r\n                                    }} \r\n                                />\r\n                                <BsFillTrashFill \r\n                                    className='icon' \r\n                                    onClick={() => Hdelete(todo._id)} \r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n            }\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}