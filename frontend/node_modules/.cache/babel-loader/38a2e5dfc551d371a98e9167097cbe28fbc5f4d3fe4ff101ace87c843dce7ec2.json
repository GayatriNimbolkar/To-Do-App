{"ast":null,"code":"import React from'react';import TaskManager from'./TaskManager';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";function App(){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(TaskManager,{})});}export default App;const API_URL=import.meta.env.VITE_API_URL;// Example function using this URL:\nexport const getTodos=async()=>{try{const response=await fetch(\"\".concat(API_URL,\"/todos\"));const data=await response.json();return data;}catch(error){console.error(\"Error fetching todos:\",error);}};","map":{"version":3,"names":["React","TaskManager","jsx","_jsx","App","className","children","API_URL","import","meta","env","VITE_API_URL","getTodos","response","fetch","concat","data","json","error","console"],"sources":["/Users/gayatrinimbolkar/Public/Projects/Todo_app/frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport TaskManager from './TaskManager';\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <TaskManager />\n        </div>\n    );\n}\n\nexport default App;\n\nconst API_URL = import.meta.env.VITE_API_URL;\n\n// Example function using this URL:\nexport const getTodos = async () => {\n  try {\n    const response = await fetch(`${API_URL}/todos`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching todos:\", error);\n  }\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACX,mBACID,IAAA,QAAKE,SAAS,CAAC,KAAK,CAAAC,QAAA,cAChBH,IAAA,CAACF,WAAW,GAAE,CAAC,CACd,CAAC,CAEd,CAEA,cAAe,CAAAG,GAAG,CAElB,KAAM,CAAAG,OAAO,CAAGC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,YAAY,CAE5C;AACA,MAAO,MAAM,CAAAC,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIR,OAAO,UAAQ,CAAC,CAChD,KAAM,CAAAS,IAAI,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CACb,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}