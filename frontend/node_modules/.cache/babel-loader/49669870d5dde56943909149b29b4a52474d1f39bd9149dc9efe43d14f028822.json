{"ast":null,"code":"var _jsxFileName = \"/Users/gayatrinimbolkar/Public/Projects/Todo_app/frontend/src/TaskManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { BsCircleFill as CircleIcon, BsFillCheckCircleFill as CheckIcon, BsFillTrashFill as TrashIcon, BsPencilFill as EditIcon } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskManager = () => {\n  _s();\n  const [taskInput, setTaskInput] = useState('');\n  const [taskList, setTaskList] = useState([]);\n  const [editInput, setEditInput] = useState('');\n  const [editTaskId, setEditTaskId] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:5003/get').then(response => setTaskList(response.data)).catch(error => console.log(error));\n  }, []);\n  const addTask = () => {\n    const trimmedTask = taskInput.trim();\n    if (!trimmedTask) return;\n    axios.post('http://localhost:5003/add', {\n      task: trimmedTask\n    }).then(response => {\n      console.log(response.data);\n      window.location.reload();\n      setTaskInput('');\n    }).catch(error => console.log(error));\n  };\n  const toggleCompletion = (id, status) => {\n    const confirmation = status ? \"Mark this task as incomplete?\" : \"Mark this task as complete?\";\n    if (window.confirm(confirmation)) {\n      axios.put(`http://localhost:5003/edit/${id}`).then(response => {\n        console.log(response.data);\n        const updatedList = taskList.map(item => item._id === id ? {\n          ...item,\n          done: !item.done\n        } : item);\n        setTaskList(updatedList);\n      }).catch(error => console.log(error));\n    }\n  };\n  const saveEdit = (id, newTask) => {\n    axios.put(`http://localhost:5003/update/${id}`, {\n      task: newTask\n    }).then(response => {\n      console.log(response.data);\n      const updatedList = taskList.map(item => item._id === id ? {\n        ...item,\n        task: newTask\n      } : item);\n      setTaskList(updatedList);\n      setEditTaskId('');\n      setEditInput('');\n      window.location.reload();\n    }).catch(error => console.log(error));\n  };\n  const deleteTask = id => {\n    axios.delete(`http://localhost:5003/delete/${id}`).then(response => {\n      console.log(response.data);\n      const updatedList = taskList.filter(item => item._id !== id);\n      setTaskList(updatedList);\n    }).catch(error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '12px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/image.png\",\n        alt: \"Task Icon\",\n        style: {\n          width: '82px',\n          height: '82px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), \"Task Manager\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter new task\",\n        value: taskInput,\n        onChange: e => setTaskInput(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), taskList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: \"No tasks found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this) : taskList.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox\",\n        children: [item.done ? /*#__PURE__*/_jsxDEV(CheckIcon, {\n          className: \"icon\",\n          onClick: () => toggleCompletion(item._id, item.done)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(CircleIcon, {\n          className: \"icon\",\n          onClick: () => toggleCompletion(item._id, item.done)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 33\n        }, this), editTaskId === item._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editInput,\n          onChange: e => setEditInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: item.done ? 'through' : 'normal',\n          children: item.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-container\",\n        children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n          className: \"icon\",\n          onClick: () => {\n            if (editTaskId === item._id) {\n              saveEdit(item._id, editInput);\n            } else {\n              setEditTaskId(item._id);\n              setEditInput(item.task);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TrashIcon, {\n          className: \"icon\",\n          onClick: () => deleteTask(item._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }, this)]\n    }, item._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskManager, \"bSyfu5RYtMTG6fMPgN6ZhfAp/HI=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","BsCircleFill","CircleIcon","BsFillCheckCircleFill","CheckIcon","BsFillTrashFill","TrashIcon","BsPencilFill","EditIcon","jsxDEV","_jsxDEV","TaskManager","_s","taskInput","setTaskInput","taskList","setTaskList","editInput","setEditInput","editTaskId","setEditTaskId","get","then","response","data","catch","error","console","log","addTask","trimmedTask","trim","post","task","window","location","reload","toggleCompletion","id","status","confirmation","confirm","put","updatedList","map","item","_id","done","saveEdit","newTask","deleteTask","delete","filter","children","style","display","alignItems","gap","src","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","required","onClick","length","_c","$RefreshReg$"],"sources":["/Users/gayatrinimbolkar/Public/Projects/Todo_app/frontend/src/TaskManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { \n    BsCircleFill as CircleIcon, \n    BsFillCheckCircleFill as CheckIcon, \n    BsFillTrashFill as TrashIcon, \n    BsPencilFill as EditIcon\n} from 'react-icons/bs';\n\nconst TaskManager = () => {\n    const [taskInput, setTaskInput] = useState('');\n    const [taskList, setTaskList] = useState([]);\n    const [editInput, setEditInput] = useState('');\n    const [editTaskId, setEditTaskId] = useState('');\n\n    useEffect(() => {\n        axios.get('http://localhost:5003/get')\n            .then(response => setTaskList(response.data))\n            .catch(error => console.log(error));\n    }, []);\n\n    const addTask = () => {\n        const trimmedTask = taskInput.trim();\n        if (!trimmedTask) return;\n        axios.post('http://localhost:5003/add', { task: trimmedTask })\n            .then(response => {\n                console.log(response.data);\n                window.location.reload();\n                setTaskInput('');\n            })\n            .catch(error => console.log(error));\n    };\n\n    const toggleCompletion = (id, status) => {\n        const confirmation = status\n            ? \"Mark this task as incomplete?\"\n            : \"Mark this task as complete?\";\n\n        if (window.confirm(confirmation)) {\n            axios.put(`http://localhost:5003/edit/${id}`)\n                .then(response => {\n                    console.log(response.data);\n                    const updatedList = taskList.map(item =>\n                        item._id === id ? { ...item, done: !item.done } : item\n                    );\n                    setTaskList(updatedList);\n                })\n                .catch(error => console.log(error));\n        }\n    };\n\n    const saveEdit = (id, newTask) => {\n        axios.put(`http://localhost:5003/update/${id}`, { task: newTask })\n            .then(response => {\n                console.log(response.data);\n                const updatedList = taskList.map(item =>\n                    item._id === id ? { ...item, task: newTask } : item\n                );\n                setTaskList(updatedList);\n                setEditTaskId('');\n                setEditInput('');\n                window.location.reload();\n            })\n            .catch(error => console.log(error));\n    };\n\n    const deleteTask = (id) => {\n        axios.delete(`http://localhost:5003/delete/${id}`)\n            .then(response => {\n                console.log(response.data);\n                const updatedList = taskList.filter(item => item._id !== id);\n                setTaskList(updatedList);\n            })\n            .catch(error => console.log(error));\n    };\n\n    return (\n        <main>\n            <h1 style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\n                <img \n                    src=\"/image.png\" \n                    alt=\"Task Icon\" \n                    style={{ width: '82px', height: '82px' }} \n                />\n                Task Manager\n            </h1>\n\n            <div className='create-form'>\n                <input\n                    type='text'\n                    placeholder='Enter new task'\n                    value={taskInput}\n                    onChange={(e) => setTaskInput(e.target.value)}\n                    required\n                />\n                <button onClick={addTask}>ADD</button>\n            </div>\n\n            {taskList.length === 0 ? (\n                <div className='task'>No tasks found</div>\n            ) : (\n                taskList.map((item) => (\n                    <div className='task' key={item._id}>\n                        <div className='checkbox'>\n                            {item.done ? (\n                                <CheckIcon\n                                    className='icon'\n                                    onClick={() => toggleCompletion(item._id, item.done)}\n                                />\n                            ) : (\n                                <CircleIcon\n                                    className='icon'\n                                    onClick={() => toggleCompletion(item._id, item.done)}\n                                />\n                            )}\n                            {editTaskId === item._id ? (\n                                <input\n                                    type='text'\n                                    value={editInput}\n                                    onChange={(e) => setEditInput(e.target.value)}\n                                />\n                            ) : (\n                                <p className={item.done ? 'through' : 'normal'}>{item.task}</p>\n                            )}\n                        </div>\n                        <div className=\"icon-container\">\n                            <EditIcon\n                                className='icon'\n                                onClick={() => {\n                                    if (editTaskId === item._id) {\n                                        saveEdit(item._id, editInput);\n                                    } else {\n                                        setEditTaskId(item._id);\n                                        setEditInput(item.task);\n                                    }\n                                }}\n                            />\n                            <TrashIcon\n                                className='icon'\n                                onClick={() => deleteTask(item._id)}\n                            />\n                        </div>\n                    </div>\n                ))\n            )}\n        </main>\n    );\n};\n\nexport default TaskManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}