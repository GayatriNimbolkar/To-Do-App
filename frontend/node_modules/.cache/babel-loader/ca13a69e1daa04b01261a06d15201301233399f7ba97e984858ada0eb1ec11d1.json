{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import axios from'axios';import{BsCircleFill as CircleIcon,BsFillCheckCircleFill as CheckIcon,BsFillTrashFill as TrashIcon,BsPencilFill as EditIcon}from'react-icons/bs';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BACKEND_URL=process.env.REACT_APP_BACKEND_URL;const TaskManager=()=>{const[taskInput,setTaskInput]=useState('');const[taskList,setTaskList]=useState([]);const[editInput,setEditInput]=useState('');const[editTaskId,setEditTaskId]=useState('');useEffect(()=>{axios.get(\"\".concat(BACKEND_URL,\"/get\")).then(response=>setTaskList(response.data)).catch(error=>console.log(error));},[]);const addTask=()=>{const trimmedTask=taskInput.trim();if(!trimmedTask)return;axios.post(\"\".concat(BACKEND_URL,\"/add\"),{task:trimmedTask}).then(response=>{console.log(response.data);window.location.reload();setTaskInput('');}).catch(error=>console.log(error));};const toggleCompletion=(id,status)=>{const confirmation=status?\"Mark this task as incomplete?\":\"Mark this task as complete?\";if(window.confirm(confirmation)){axios.put(\"\".concat(BACKEND_URL,\"/edit/\").concat(id)).then(response=>{console.log(response.data);const updatedList=taskList.map(item=>item._id===id?{...item,done:!item.done}:item);setTaskList(updatedList);}).catch(error=>console.log(error));}};const saveEdit=(id,newTask)=>{axios.put(\"\".concat(BACKEND_URL,\"/update/\").concat(id),{task:newTask}).then(response=>{console.log(response.data);const updatedList=taskList.map(item=>item._id===id?{...item,task:newTask}:item);setTaskList(updatedList);setEditTaskId('');setEditInput('');window.location.reload();}).catch(error=>console.log(error));};const deleteTask=id=>{axios.delete(\"\".concat(BACKEND_URL,\"/delete/\").concat(id)).then(response=>{console.log(response.data);const updatedList=taskList.filter(item=>item._id!==id);setTaskList(updatedList);}).catch(error=>console.log(error));};return/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"h1\",{style:{display:'flex',alignItems:'center',gap:'12px'},children:[/*#__PURE__*/_jsx(\"img\",{src:\"/image.png\",alt:\"Task Icon\",style:{width:'82px',height:'82px'}}),\"Task Manager\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"create-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter new task\",value:taskInput,onChange:e=>setTaskInput(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{onClick:addTask,children:\"ADD\"})]}),taskList.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"task\",children:\"No tasks found\"}):taskList.map(item=>/*#__PURE__*/_jsxs(\"div\",{className:\"task\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"checkbox\",children:[item.done?/*#__PURE__*/_jsx(CheckIcon,{className:\"icon\",onClick:()=>toggleCompletion(item._id,item.done)}):/*#__PURE__*/_jsx(CircleIcon,{className:\"icon\",onClick:()=>toggleCompletion(item._id,item.done)}),editTaskId===item._id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editInput,onChange:e=>setEditInput(e.target.value)}):/*#__PURE__*/_jsx(\"p\",{className:item.done?'through':'normal',children:item.task})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"icon-container\",children:[/*#__PURE__*/_jsx(EditIcon,{className:\"icon\",onClick:()=>{if(editTaskId===item._id){saveEdit(item._id,editInput);}else{setEditTaskId(item._id);setEditInput(item.task);}}}),/*#__PURE__*/_jsx(TrashIcon,{className:\"icon\",onClick:()=>deleteTask(item._id)})]})]},item._id))]});};export default TaskManager;","map":{"version":3,"names":["React","useState","useEffect","axios","BsCircleFill","CircleIcon","BsFillCheckCircleFill","CheckIcon","BsFillTrashFill","TrashIcon","BsPencilFill","EditIcon","jsx","_jsx","jsxs","_jsxs","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","TaskManager","taskInput","setTaskInput","taskList","setTaskList","editInput","setEditInput","editTaskId","setEditTaskId","get","concat","then","response","data","catch","error","console","log","addTask","trimmedTask","trim","post","task","window","location","reload","toggleCompletion","id","status","confirmation","confirm","put","updatedList","map","item","_id","done","saveEdit","newTask","deleteTask","delete","filter","children","style","display","alignItems","gap","src","alt","width","height","className","type","placeholder","value","onChange","e","target","required","onClick","length"],"sources":["/Users/gayatrinimbolkar/Public/Projects/Todo_app/frontend/src/TaskManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { \n    BsCircleFill as CircleIcon, \n    BsFillCheckCircleFill as CheckIcon, \n    BsFillTrashFill as TrashIcon, \n    BsPencilFill as EditIcon\n} from 'react-icons/bs';\n\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\n\nconst TaskManager = () => {\n    const [taskInput, setTaskInput] = useState('');\n    const [taskList, setTaskList] = useState([]);\n    const [editInput, setEditInput] = useState('');\n    const [editTaskId, setEditTaskId] = useState('');\n\n    useEffect(() => {\n        axios.get(`${BACKEND_URL}/get`)\n            .then(response => setTaskList(response.data))\n            .catch(error => console.log(error));\n    }, []);\n\n    const addTask = () => {\n        const trimmedTask = taskInput.trim();\n        if (!trimmedTask) return;\n        axios.post(`${BACKEND_URL}/add`, { task: trimmedTask })\n            .then(response => {\n                console.log(response.data);\n                window.location.reload();\n                setTaskInput('');\n            })\n            .catch(error => console.log(error));\n    };\n\n    const toggleCompletion = (id, status) => {\n        const confirmation = status\n            ? \"Mark this task as incomplete?\"\n            : \"Mark this task as complete?\";\n\n        if (window.confirm(confirmation)) {\n            axios.put(`${BACKEND_URL}/edit/${id}`)\n                .then(response => {\n                    console.log(response.data);\n                    const updatedList = taskList.map(item =>\n                        item._id === id ? { ...item, done: !item.done } : item\n                    );\n                    setTaskList(updatedList);\n                })\n                .catch(error => console.log(error));\n        }\n    };\n\n    const saveEdit = (id, newTask) => {\n        axios.put(`${BACKEND_URL}/update/${id}`, { task: newTask })\n            .then(response => {\n                console.log(response.data);\n                const updatedList = taskList.map(item =>\n                    item._id === id ? { ...item, task: newTask } : item\n                );\n                setTaskList(updatedList);\n                setEditTaskId('');\n                setEditInput('');\n                window.location.reload();\n            })\n            .catch(error => console.log(error));\n    };\n\n    const deleteTask = (id) => {\n        axios.delete(`${BACKEND_URL}/delete/${id}`)\n            .then(response => {\n                console.log(response.data);\n                const updatedList = taskList.filter(item => item._id !== id);\n                setTaskList(updatedList);\n            })\n            .catch(error => console.log(error));\n    };\n\n    return (\n        <main>\n            <h1 style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\n                <img \n                    src=\"/image.png\" \n                    alt=\"Task Icon\" \n                    style={{ width: '82px', height: '82px' }} \n                />\n                Task Manager\n            </h1>\n\n            <div className='create-form'>\n                <input\n                    type='text'\n                    placeholder='Enter new task'\n                    value={taskInput}\n                    onChange={(e) => setTaskInput(e.target.value)}\n                    required\n                />\n                <button onClick={addTask}>ADD</button>\n            </div>\n\n            {taskList.length === 0 ? (\n                <div className='task'>No tasks found</div>\n            ) : (\n                taskList.map((item) => (\n                    <div className='task' key={item._id}>\n                        <div className='checkbox'>\n                            {item.done ? (\n                                <CheckIcon\n                                    className='icon'\n                                    onClick={() => toggleCompletion(item._id, item.done)}\n                                />\n                            ) : (\n                                <CircleIcon\n                                    className='icon'\n                                    onClick={() => toggleCompletion(item._id, item.done)}\n                                />\n                            )}\n                            {editTaskId === item._id ? (\n                                <input\n                                    type='text'\n                                    value={editInput}\n                                    onChange={(e) => setEditInput(e.target.value)}\n                                />\n                            ) : (\n                                <p className={item.done ? 'through' : 'normal'}>{item.task}</p>\n                            )}\n                        </div>\n                        <div className=\"icon-container\">\n                            <EditIcon\n                                className='icon'\n                                onClick={() => {\n                                    if (editTaskId === item._id) {\n                                        saveEdit(item._id, editInput);\n                                    } else {\n                                        setEditTaskId(item._id);\n                                        setEditInput(item.task);\n                                    }\n                                }}\n                            />\n                            <TrashIcon\n                                className='icon'\n                                onClick={() => deleteTask(item._id)}\n                            />\n                        </div>\n                    </div>\n                ))\n            )}\n        </main>\n    );\n};\n\nexport default TaskManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}